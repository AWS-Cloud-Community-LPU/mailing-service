/*
 * This file is generated by jOOQ.
 */
package com.awscclpu.mailingservice.jooq.tables.pojos;


import com.awscclpu.mailingservice.constant.MailingType;
import com.awscclpu.mailingservice.constant.Role;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Boolean active;
    private String email;
    private LocalDateTime generatedAt;
    private MailingType mailingType;
    private String name;
    private String password;
    private Role role;
    private Long sentEmails;
    private LocalDateTime updatedAt;
    private String username;

    public Users() {}

    public Users(Users value) {
        this.id = value.id;
        this.active = value.active;
        this.email = value.email;
        this.generatedAt = value.generatedAt;
        this.mailingType = value.mailingType;
        this.name = value.name;
        this.password = value.password;
        this.role = value.role;
        this.sentEmails = value.sentEmails;
        this.updatedAt = value.updatedAt;
        this.username = value.username;
    }

    public Users(
        Long id,
        Boolean active,
        String email,
        LocalDateTime generatedAt,
        MailingType mailingType,
        String name,
        String password,
        Role role,
        Long sentEmails,
        LocalDateTime updatedAt,
        String username
    ) {
        this.id = id;
        this.active = active;
        this.email = email;
        this.generatedAt = generatedAt;
        this.mailingType = mailingType;
        this.name = name;
        this.password = password;
        this.role = role;
        this.sentEmails = sentEmails;
        this.updatedAt = updatedAt;
        this.username = username;
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.users.id</code>.
     */
    public Users setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.users.active</code>.
     */
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>public.users.active</code>.
     */
    public Users setActive(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>public.users.email</code>.
     */
    public Users setEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Getter for <code>public.users.generated_at</code>.
     */
    public LocalDateTime getGeneratedAt() {
        return this.generatedAt;
    }

    /**
     * Setter for <code>public.users.generated_at</code>.
     */
    public Users setGeneratedAt(LocalDateTime generatedAt) {
        this.generatedAt = generatedAt;
        return this;
    }

    /**
     * Getter for <code>public.users.mailing_type</code>.
     */
    public MailingType getMailingType() {
        return this.mailingType;
    }

    /**
     * Setter for <code>public.users.mailing_type</code>.
     */
    public Users setMailingType(MailingType mailingType) {
        this.mailingType = mailingType;
        return this;
    }

    /**
     * Getter for <code>public.users.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.users.name</code>.
     */
    public Users setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>public.users.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>public.users.password</code>.
     */
    public Users setPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Getter for <code>public.users.role</code>.
     */
    public Role getRole() {
        return this.role;
    }

    /**
     * Setter for <code>public.users.role</code>.
     */
    public Users setRole(Role role) {
        this.role = role;
        return this;
    }

    /**
     * Getter for <code>public.users.sent_emails</code>.
     */
    public Long getSentEmails() {
        return this.sentEmails;
    }

    /**
     * Setter for <code>public.users.sent_emails</code>.
     */
    public Users setSentEmails(Long sentEmails) {
        this.sentEmails = sentEmails;
        return this;
    }

    /**
     * Getter for <code>public.users.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.users.updated_at</code>.
     */
    public Users setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>public.users.username</code>.
     */
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for <code>public.users.username</code>.
     */
    public Users setUsername(String username) {
        this.username = username;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.active == null) {
            if (other.active != null)
                return false;
        }
        else if (!this.active.equals(other.active))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.generatedAt == null) {
            if (other.generatedAt != null)
                return false;
        }
        else if (!this.generatedAt.equals(other.generatedAt))
            return false;
        if (this.mailingType == null) {
            if (other.mailingType != null)
                return false;
        }
        else if (!this.mailingType.equals(other.mailingType))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.role == null) {
            if (other.role != null)
                return false;
        }
        else if (!this.role.equals(other.role))
            return false;
        if (this.sentEmails == null) {
            if (other.sentEmails != null)
                return false;
        }
        else if (!this.sentEmails.equals(other.sentEmails))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.username == null) {
            if (other.username != null)
                return false;
        }
        else if (!this.username.equals(other.username))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.active == null) ? 0 : this.active.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.generatedAt == null) ? 0 : this.generatedAt.hashCode());
        result = prime * result + ((this.mailingType == null) ? 0 : this.mailingType.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.role == null) ? 0 : this.role.hashCode());
        result = prime * result + ((this.sentEmails == null) ? 0 : this.sentEmails.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(active);
        sb.append(", ").append(email);
        sb.append(", ").append(generatedAt);
        sb.append(", ").append(mailingType);
        sb.append(", ").append(name);
        sb.append(", ").append(password);
        sb.append(", ").append(role);
        sb.append(", ").append(sentEmails);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(username);

        sb.append(")");
        return sb.toString();
    }
}
